PuTTY
PuTTY(이하 푸티)는 가상 단말기 프로그램이다.
서버는 물리적으로 떨어져 있어도 단말 장비를 통해서 원격으로 접속하여 작업할 필요가 있는데
이때 윈도우같은 개인 pc 운영체제에서도 서버로 접속할 수 있도록 물리적인 단말장비가 아닌 논리적인 가상 단말기를 제공한다.
접속 방식으로는 Telet, SSH, Rlogin 등 다양한 방법을 제공하고 있고 가상 단말기로서 가볍고 다양한 설정이 가능한 무료 오픈소스 프로그램이다.


*네트워크 프로토콜 

1)SSH란? 
Secure Shell Protocol, 즉 네트워크 프로토콜 중 하나로 컴퓨터와 컴퓨터가 인터넷과 같은 Public Network를 통해 
서로 통신을 할  때 보안적으로 안전하게 통신을 하기 위해 사용하는 프로토콜이다. 
대표적 사용의 예
1.데이터 전송
2.원격 제어 

데이터 전송의 예 -> 깃헙 -소스코드를 원격 저장소인 깃헙에 푸쉬할 때 여러분은 ssh를 활용해 파일을 전송-
원격 제어의 예   -> AWS와 같은 클라우드 서비스 -AWS의 인스턴스 서버에 접속하여 머신에 명령을 내리기 위해서 SSH를 통한 접속한다-


*SSH를 사용하는 이유? 
보안 때문이다.  
FTP나 Telnet은 정보를 직접 네트워크를 통해 넘기기 때문에 누구나 해당 정보를 열어 볼 수 있어 보안에 상당히 취약하다.
반면 SSH는 먼저 보안적으로 훨씬 안전한 채널을 구성한 뒤 정보를 교환하기 때문에 보다 보안적인 면에서 훨씬 뛰어나다.


*SSH의 보안강화 방식 
Private Key와 Public Key를 이용한다. 
다른 컴퓨터와 통신을 하기 위한 접속을 할 때 일반적으로 사용하는 비밀번호의 입력을 통한 접속을 하지 않는다. 
기본적으로 SSH는 한쌍의 Key-Private Key,Public Key-를 통해 접속하는 방식으로 컴퓨터와 인증 과정을 거치게 된다. 
1)Public Key 
공개되어도 비교적 안전한 key이며 이 키를 통해 메세지를 전송하기 전 암호화를 하게 된다. 
암호화는 가능하지만 복호화는 불가능하다. 
2)Private Key 
절대 외부에 노출이 되어서는 안되는 Key 본인의 컴퓨터 내부에 저장하게 되어 있다. Private Key를 통해 
암호화 된 메세지를 복호화 할 수 있다.

Process
Public Key 통시하는 컴퓨터에 복사 저장 -> 요청을 보내는 클라이언트 사이드 컴퓨터에서 접소 요청-> 응답 하는 서버 사이드 컴퓨터에 
복사되어 저장된 Public Key와 클라이언트 사이드에 해당 키와 쌍을 이루는 Private Key를 비교하여 서로 한쌍의 Key인지 아닌지 검사 


--------------------------------------------------------------------------------------------------------------------------------------------
각종 명령어 
* 파일/디렉토리 관련 명령어

ls : 디렉토리/파일 목록보기
ls -al : 숨겨진 디렉토리/파일 목록까지 정렬된 형태로 보기
cd (디렉토리이름) : 해당 디렉토리로 이동
cd : 최상위 디렉토리로 이동
pwd : 현재 디렉토리의 위치 보여주기
mkdir (디렉토리이름) : 해당 디렉토리 만들기
rm (파일이름) : 해당파일 지우기
rm -r (디렉토리이름) : 해당 디렉토리 지우기
rm -f (파일이름) : 강제로 해당파일 지우기
rm -rf (디렉토리이름) : 해당디렉토리와 디렉토리 아래에 있는 모든 파일 삭제
cp [파일1] [파일2] : 파일1을 파일2라는 이름으로 복사
cp -r [디렉토리1] [디렉토리2] : [디렉토리1] 안에 있는 것들을 [디렉토리2]로 복사/ [디렉토리2]가 존재하지 않는다면 [디렉토리2]를 만듬.
mv [파일1] [파일2] : [파일1]을 [파일2]로 이름을 바꾸거나 옮김. [파일2]가 디렉토리로 존재한다면 [파일1]을 [파일2] 디렉토리로 옮김.
touch [파일이름] : 해당파일을 생성하거나 업데이트
cat > [파일이름] : 입력을 해당이름으로 저장
cat < [파일이름] : 해당파일의 내용을 출력(모두 출력)
more [파일이름] : 해당파일의 내용을 출력(구분 출력)
head [파일이름] : 해당파일의 첫 10줄을 출력
tail [파일이름] : 해당파일의 마지막 10줄을 출력
tail -f [파일이름] : 해당파일에 추가되는 내용을 출력, 마지막 10줄부터 출력함.

* 프로세스 관련 명령어
ps : 현재 활성화된 프로세스 보여주기
top : 실행중인 모든 프로세스 보여주기
kill [프로세스 id] : 해당 프로세스를 종료(프로세스 idㄹ를 줄여서 pid라고 함/pid는 'ps'명령어를 입력하였을 때, 해당 프로세스의 맨 앞에 위치한 숫자를 의미한다.
bg : 정지되었거나 화면에서 안보이게 실행중인 프로세스 보여주기/정지된 프로세스를 화면에 출력하지 않고 계속 진행하기
fg : 화면에 보이지 않게 작동하던 작업 중 최근의 것을 화면에 출력하면서 작동시키기
fg n : 화면에 보이지 않게 작동하던 작업 중 n 번째 작업을 화면에 출력하면서 작동시키기

* 파일 권한(퍼미션)관련 명령어
chmod [권한숫자][파일이름] : 해당파일의 퍼미션값을 해당 권한숫자대로 바꾸고 숫자는 3자리이며 첫 번째는 소유자, 두번째는 그룹, 세번째는 익명의 권한을 더해서 나타낸다.

* 단축키
Ctrl+C : 현재 명령의 실행을 강제로 마침
Ctrl+Z : 현재 명령을 멈춤. fgf를 이용해서 계속해서 화면에서 보이도록 실행하거나 bg 를 이용해서 안보인채 계속 실행.
Ctrl+D : 현 세션에서 로그아웃, exit와 비슷
Ctrl+W : 현재 라인에서 한 단어 삭제
Ctrl+U : 현재 줄 전체 삭제
Ctrl+R : 최근 입력한 명령어 보여주기
!! : 마지막 명령어 반복실행
exit : 현재 세션에서 로그아웃



